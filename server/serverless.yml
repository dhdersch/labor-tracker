service:
  name: labor-tracker
plugins: 
  - serverless-python-requirements
  - serverless-wsgi
custom: ${file(serverless-config/${opt:stage, 'dev'}.yml)}
provider:
  name: aws
  runtime: python3.6
  region: ${self:custom.region}
  deploymentBucket: 
    name: labor-tracker
    serverSideEncryption: AES256
  environment:
    PATIENTS_TABLE: patients-${self:custom.stage}
    CLINICIANS_TABLE: clinicians-${self:custom.stage}
  profile: ${opt:profile}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - { "Fn::GetAtt": ["Patients", "Arn" ] }

functions:
  laborTrackerAPI:
    handler: wsgi.handler
    events:
      - http: ANY /
      - http: 'ANY {proxy+}'

resources:
  Resources:
    Patients:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: patients-${self:custom.stage}
        AttributeDefinitions:
          - AttributeName: key
            AttributeType: S
        KeySchema:
          - AttributeName: key
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    # Clinicians:
    #   Type: AWS::DynamoDB::Table
    #   Properties:
    #     TableName: clinicians-${self:custom.stage}
    #     AttributeDefinitions:
    #       - AttributeName: key
    #         AttributeType: S
    #     KeySchema:
    #       - AttributeName: key
    #         KeyType: HASH
    #     ProvisionedThroughput:
    #       ReadCapacityUnits: 1
    #       WriteCapacityUnits: 1